version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: algotrading
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for Celery
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  # Backend Django Application
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: unless-stopped
    environment:
      - DEBUG=False
      - DJANGO_SETTINGS_MODULE=backend.settings
      - DATABASE_URL=postgresql://postgres:password@db:5432/algotrading
      - REDIS_URL=redis://redis:6379/0
      - ALLOWED_HOSTS=localhost,127.0.0.1,backend
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    ports:
      - "8000:8000"
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             gunicorn --bind 0.0.0.0:8000 --workers 3 backend.wsgi:application"

  # Celery Worker (for background tasks)
  celery:
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: unless-stopped
    environment:
      - DEBUG=False
      - DJANGO_SETTINGS_MODULE=backend.settings
      - DATABASE_URL=postgresql://postgres:password@db:5432/algotrading
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - db
      - redis
      - backend
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    command: celery -A backend worker -l info

  # Celery Beat (for scheduled tasks)
  celery-beat:
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: unless-stopped
    environment:
      - DEBUG=False
      - DJANGO_SETTINGS_MODULE=backend.settings
      - DATABASE_URL=postgresql://postgres:password@db:5432/algotrading
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - db
      - redis
      - backend
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    command: celery -A backend beat -l info

  # Frontend React Application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
    volumes:
      - static_volume:/app/staticfiles

volumes:
  postgres_data:
  redis_data:
  static_volume:
  media_volume:

networks:
  default:
    driver: bridge
